https://platzi.com/clases/2444-react/40304-jsx-componentes-vs-elementos-y-props-vs-atributos/

https://dev.to/rubemfsv/clean-architecture-applying-with-react-40h6

https://www.youtube.com/watch?v=5LqhlCd2_nE

https://www.youtube.com/watch?v=wYpCWwD1oz0

https://platzi.com/clases/2444-react/40305-componentes-de-todo-machine/




https://www.youtube.com/watch?v=KjY94sAKLlw

https://platzi.com/clases/2444-react/40306-css-en-react/


cuando se le asigna un valor a un atributo de una etiqueta html INLINE como por ejemplo el style
se debe ingresar un objeto, es decir, colocar entre {} el valor de la variable como {variable1}
o declarar ahi mismo el objeto con docle llave {{
    color: 'red',
    backgroudColor: 'yellow'
}}

Para declarar el atributo class en una etiqueta en react se coloca  

El layout principal, lo dá el archivo public/index.html


--------------------------------------------------------------

Cuando se itera en un array de objetos, se pueden pasar propiedades a las clases o widgets
<TodoItem key={todo.text} text={todo.text} completed={todo.completed} />


const [searchValue, setSearchValue] = React.useState();

useState regresa el valor del estado y la funcion que lo setea 




JSON.stringify  nos permite tranformar en texto un JSON
JSON.parse lo transforma al reves 

Local Storage
Nos permite guardar datos persistentes en el navegador del usuario, que podremos acceder, modificar y hasta eliminar, para esto localStorage tiene varios métodos.

Guardar datos: setItem(nombre, dato)
Acceder a datos: getItem(nombre)
Borrar un dato: removeItem(nombre)
Eliminar todos los datos: clear(nombre)


Hook Efect
no se ejecuta como el resto del código, 
se ejecutará inicialmente justo antes de hacer el renderizado del HTML que resulte de nuestro código de React.


useEffect se ejecuta despues que se renderiza el codigo
React.useEffect(() => {


})

si  no se le coloca una condicion despues de la funcion, se ejecuta cada vez que cambia algo del html

si se coloca alguna variable, se ejecutara una vez más de la inicial cuando cambie la variable

Sin pasar un arreglo como segundo argumento: useEffect(funcion)
Cuando no le pasamos un segundo argumento con las condiciones de cuándo se debe re-ejecutar 
nuestra función, React tomará como condiciones que se debe ejecutar nuestra función todas las veces que ocurra un re-renderizado, y también cada vez que se actualice alguna prop (Si es que el componente recibe alguna).

Pasando un arreglo vacío: useEffect(funcion, [])
Cuando pasamos un arreglo vacío, le estás diciendo a React que no hay ninguna condición para volver a ejecutar el código 
de nuestra función, entonces solamente se ejecutará en el renderizado inicial.

Pasando un arreglo con datos: useEffect(funcion, [val1, val2, valN])
Cuando especificas las condiciones dentro del arreglo del segundo parámetro, 
le estás diciendo a React que ejecute nuestra función en el renderizado inicial y 
también cuando algún dato del arreglo cambie.


https://platzi.com/clases/2444-react/40315-react-context-estado-compartido/


Creamos un cotext en la carpeta TodoContext

ocupamos React.createContext();

colocamos funciones y variables, pero retrnmaos 

<TodoContext.Provider value={{variables,funciones}}>{props.children}</TodoContext.Provider>


luego el en el index el appui lo envolvemos con 

<TodoProvider>
    <AppUI 
    />
</TodoProvider>

Así ese provider esta disponible en cualquier componente hijo

dentro de cada componente llamaos a 

const {
        funciones,
        variables
    } = React.useContext(TodoContext);

importando el TodoContext desde el context
y los podemos ocupar dentro del componente

EN react 18
para hacer render del root se usa
import ReactDOM from 'react-dom/client';

Pero en el componente que se crea el portal se ocupa
import ReactDOM from "react-dom";


Cada setter de React.useState, em permite asignarle en una function el estado previo, de la forma 
props.setOpenModal(prevState => !prevState);

por ejemplo

Para github si no se incia el agente ssh 
iniciarlo manualmente

Start-Service ssh-agent

Se checkea Get-Service ssh-agent 

Get-Service ssh-agent | Select StartType

Get-Service -Name ssh-agent | Set-Service -StartupType Manual








